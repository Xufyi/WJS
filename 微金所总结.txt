css

1..流式布局是用于解决类似的设备不同分辨率之间的兼容(一般分辨率差异较少)

2.响应式是用于解决不用设备之间不用分辨率之间的兼容问题(一般是指PC，平板，手机等设备之间较大的分辨率差异)   针对不同设备宽度范围开发静态页面

3.<!--大屏设备 当设备分辨率大于等于1200时，背景颜色 黄绿色-->
<!--中屏设备 当设备分辨率大于等于992小于1200时，背景颜色 绿色-->
<!-- 小屏设备 当设备分辨率大于等于768小于992时，背景颜色 蓝色-->
<!--超小屏设备 当设备分辨率小于768时，背景颜色 紫色-->

4.
[class^="icon_"],包含ico开头的属性的元素
[class*=" icon_"] 包含ico字段的属性的元素


文件区别
8.normalize.css   考虑不同浏览器默认样式是否一致，如不一致就重置样式
 reset.css	不管浏览器默认样式是否一致，都进行重置

9.bootstrap所有的盒子和伪元素都被设置了盒子包括边框模式

10. css !important作用是提高指定CSS样式规则的应用优先权。
	 但是IE 6.0仍然不能完全识别

11.box-sizing:border-box;

12.   <!--title插入图标的办法-->
<link rel="Shortcut icon" href="favicon.ico" type="image/x-icon">

1.如果添加了bootstrap类后，不满意样式，可以在添加一个类名在修改样式

2.常用快捷键??
	怎么替换多个类名 ctrl+r 替换

click event.preventDefault()，阻止事件发生


3.移动端300ms延时，指touchstart和touchend之间超过300ms
	1.通过tab事件，zepto的一个库
		从touchstrat和touchend之间加判断衍生出来，但是要禁止滑动事件
	2.引用fastclick一个js插件，

1.禁用缩放：简单，但同时也使的网页无法缩放，没没有双击事件不适用于未对移动端浏览做适配		优化的网页。
更	改默认视口宽度：简单，但需要浏览器支持。

2.指针事件和css touch-action:新属性，可能存在浏览器兼容问题，如仅为解决点击延迟问题儿引	入一整套指针事件有点过了。

3.tap事件：能较好解决点击延迟，并且对其他移动端触摸事件也有较好支持，但存在点透问题，最	新版是已经解决。

4.fastclick:当前较好的专门解决点击延迟的库，脚本尺寸相对较大。

点透事件
	当在链接区域进行点击罩层A的时候，会发现跳到我的博客页面了，也就是，本来点击A，但是却透过A，点击到了B里的链接！这就是传说中的 click点透。

5.border-radius: 0; 错误写法border-radius: none;


6.html里面任何位置都以写style样式

8.原型的作用，共享数据，节省空间

物理像素比：1px里面放几个物理像素点
逻辑像素
像素比

9. 物理像素，也就是设备像素，不同设备不一样
   CSS就是设备独立像素，(也叫密度无关像素)，可以认为是计算机坐标系统中的一个点，这个点代表一个可以由程序使用并控制的虚拟像素(比如：CSS 像素,只是在android机中CSS 像素就不叫”CSS 像素”了而是叫”设备独立像素”)，然后由相关系统转换为物理像素。

	逻辑分辨率 
	像素

ppi： 像素/每英寸 屏幕像素密度
dpi:  水平货垂直方向上的像素密度
两个其实是一个意思
逻辑像素，都是统一大小。 设备

格式化代码的快键键 Ctrl+Alt+l

10.
background-size: cover;/*把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。*/

24.自适应布局，利用@metia，媒体查询技术，每个屏幕做对应的静态页面
也就是流式布局 ，让内容像水一样流动，但是屏幕太大或太小，显示非常不协调。

25.设置了display:none  图片的src=""还是会加载

1.
JQ中$(window).load和$(document).ready区别与执行顺序
	$(document).ready(function(){...})=$(function(){})
	$(document).ready()是在页面完成HTML的加载并建立了DOM树之后就开始执行，但这并不代表页面的所有数据已经全部加载完成，一些大的图片有会在建立DOM树之后很长一段时间才行加载完成，而$(window).load()就是整个页面已经加载完毕后才执行，包括图片等一些关联文件。

	2.可以被执行的次数不同
	$(document).ready()可以在JavaScript代码中出现多次，并且里面的函数或者代码都可以执行；而$(window).load()只能在JavaScript代码中出现一次，如果有多个$(window).load()，那么只有最后一个$(window).load()里面的函数或者代码才会执行，之前的$(window).load()都将被覆盖;

	3.执行的效率不同
	如要在dom的元素节点中添加onclick属性节点，这时用$(document).ready()就要比用$(window).load()的效率高；但是在某些时候还必须得用$(window).load()才行

总结一下就是：$(window).load()在$(document).ready之后执行，且页面中所有内容全部加载完成后才会执行，两者的使用时机一目了然，大家可以自行决定。


2.出现了一个bug，把HTML的轮播图的图片注释，出现插件报错
3.图片和后缀名之间不要出现空格


3.$(不加括号)
document、this、window 这些都是系统对象   可以直接使用的 所以不用加引号 对象不加括号
加引号的一般是元素标签有id、class这些，用$("xx")的方式获取这些元素用的

4.\n转义字符


5.
$("li").on("click",function(){ }) 注册事件
$("li").off("click") 解除事件
$("li").trigger("click") 触发事件

col-md-4 col-sm-6换顺序



6.利用bootstrap框架是，尽量不去删除样式，要把样式内容设置为0之类，才好层叠样式，不然后加载bootstrap样式还是会给加上样式


7.  cursor: default;
属性规定要显示的光标的类型（形状）。
该属性定义了鼠标指针放在一个元素边界范围内时所用的光标形状


8.border-bottom-color: transparent;透明


12.区分bootstrap的类名是中划线，自己做的类名是下划线，


13.设置盒子阴影
	box-shadow: 3px 3px 5px #d8d8d8;
 	box-shadow: inset 0 -2px 2px #ccc;  inset往里偏移

15.sub下距离 默认0.25em ，父元素大小的0.25

16.
p:first-child i  选择器匹配所有作为元素的第一个子元素的 <p> 元素中的所有 <i> 元素：
		 特别注意，如果p不是父元素的第一个子元素，那么不起作用
		
p:last-child 

p:nth-clild(3)   p中的第3个


p:first-of-type  找到某元素下所有子元素中的第一个p标签
		 即使p不是父元素的第一个子元素，也能起作用
p:last-of-type

p:nth-of-type(3)

17.选择器的优先级
!important > 行内样式>ID选择器 > 类选择器 > 标签 > 通配符 > 继承 > 浏览器默认属性
	如果出现两个并列选择器的，可以假设把两个选择器的权重相加，权重大的自然回覆盖前面的即使权重大的选择器在前面也一样覆盖被副高

18.span里面的文字怎么垂直居中，视屏教程说不行，会把文字和边框当成整体？？



19.管理mySQL
	我的电脑-管理-服务-mySQL-禁用/手动

20.卸载程序
控制面板\程序\程序和功能

事件冒泡
21
(window).resize() 屏幕大小变化时，数值跟着改变

22获取宽度的办法width
//获取元素的宽高，
console.log($("div").width()) //width
console.log($("div").innerWidth()) //width+padding
console.log($("div").outerWidth()) //width+padding+border
console.log($("div").outerWidth(true)) //width+padding+border+margin


24.应用了两个同样的组件，那么替换类名要小心，避免吧上面的代码也给替换了，建议一个一个替换

26.ctrl+类名 可以去到css样式里面

28.样式的继承是否只继承父元素？？  不是全部继承

29.设置元素背景和设置图片的区别
	设置元素背景：设置背景图片居中显示，那么当你屏幕缩小是，背景图片会原比例的情况缩小背景图片两边，达到居中显示效果

30.span中文字无法居中的问题：看下是不是设置了全局，box-sizing:border-box 会把border高度也算进来


html


js